#!/usr/bin/env python

from PandaCore.Tools.Misc import PInfo, PError
from sys import argv, exit
import argparse

parser = argparse.ArgumentParser(description='root to npy file')
parser.add_argument('--treename',help='input TTree name',type=str,default='events')
parser.add_argument('--output',help='output npy file',type=str,default=None)
parser.add_argument('--selection',help='cut to apply to trees',type=str,default=None)
parser.add_argument('--config',help='config of branches to copy',type=str,default=None)
parser.add_argument('infile',metavar='input',type=str,nargs='+',help='input file(s) to process')
args = parser.parse_args()

argv = []

infiles = args.infile
if not args.output:
    if len(infiles)!=1:
        PError('root2npy','More than one input specified, please explicitly specify output!')
        exit(1)
    args.output = infiles[0].replace('.root','.npy')

branches = None
if args.config:
    branches = []
    repl = {}
    fconfig = open(args.config)
    for line in fconfig:
        line = line.strip()
        if len(line)==0 or line[0]=='#':
            continue
        ll = line.split(':')
        field = ll[0].strip()
        if len(ll)>1:
            formula = ll[1].strip()
        else:
            formula = field
        branches.append(formula)
        repl[formula] = field

from PandaCore.Tools.root_interface import read_files, rename_dtypes
import PandaCore.Tools.Functions
from numpy import save

xarr = read_files(filenames = infiles,
                  branches = branches,
                  cut = args.selection,
                  treename = args.treename)

if args.config:
    rename_dtypes(xarr, repl)

save(args.output,xarr)
